{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","defaultProps","about","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.aee97d44.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\"></span></a>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n                    </li> */}\r\n                    \r\n                </ul>\r\n                {/* <form className=\"form-inline my-2 my-lg-0\">\r\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                </form> */}\r\n                <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Darkmode</label>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title: \"TextUtils\",\r\n    about: \"About\"\r\n}","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n    const handleClrClick = () => {\r\n        setText(\"\")\r\n        props.showAlert(\"Text cleared\", \"success\")\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleCopy=()=>{\r\n        console.log(\"I am copy\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard!\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed\",\"success\");\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\" style={{ backgroundColor: props.mode === 'dark' ? '#120652' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }}></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleClrClick}>Clear</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h2>Your text summary</h2>\r\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower= word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\n\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#120652';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About/>\n            </Route>\n            <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading=\"Enter text here\" mode={mode} toggleMode={toggleMode} />\n            {/* </Route>\n          </Switch>\n           */}\n        \n\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}